@model Songsong.Models.Song
@{
    ViewData["Title"] = "Create";
    var categories = ViewData["categories"] as List<Category>;
}

<h2>Create</h2>
<h4>Song</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NameSong" class="control-label"></label>
                <input asp-for="NameSong" class="form-control" />
                <span asp-validation-for="NameSong" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Singer" class="control-label"></label>
                <input asp-for="Singer" class="form-control" />
                <span asp-validation-for="Singer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SongCategories" class="control-label"></label>
            </div>
            <div class="checkbox">

                <ul>
                    @foreach (var c in categories)
                    {
                        <li><input type="checkbox" value="@c.CategoryID" name="categoriesId[]" />@c.CategoryName</li>
                    }
                </ul>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

